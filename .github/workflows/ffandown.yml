name: ffandown build
on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'latest'
  schedule:
    - cron: '0 0 * * *'  # 每天的00:00触发
  push:
    branches:
      - push-all

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/ffandown
      REPO_URL: ${{ vars.REPO_URL }}        # 新增：仓库URL变量
      REPO_PATH: ${{ vars.REPO_PATH }}      # 新增：仓库本地路径变量
      BUILD_TAG: ""  # 新增：定义 BUILD_TAG 变量
      CODE_GITHUB: "helson-lin/ffandown"
      CODE_PATH: "ffandown"
      DOCKERFILE_PATH: "ffandown"

    steps:
      # 新增步骤：下载并解压指定版本的代码
      - name: Download and extract
        run: |
          git clone https://github.com/${{env.CODE_GITHUB}}.git ${{env.CODE_PATH}}

      # 拉取私有仓库代码（使用 GitHub PAT）
      - name: Pull project code
        env:
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        run: |
          git clone https://$REPO_ACCESS_TOKEN@$REPO_URL $REPO_PATH

      # 新增步骤：拷贝 file
      - name: Copy file to out directory
        run: |
          cp $REPO_PATH/${{env.DOCKERFILE_PATH}}/* ${{env.CODE_PATH}}/

      # 设置 Docker 构建环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录 DockerHub
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      
      # 构建
      - name: Build App and push Docker image with tags
        run: |
          cd ${{env.CODE_PATH}}
          BUILD_TAGS="-t $IMAGE_NAME:latest"
          # if [[ "${{ steps.check_tag.outputs.tag_exists }}" == "false" ]]; then
          #   BUILD_TAGS="-t $IMAGE_NAME:${{ env.BUILD_TAG }} $BUILD_TAGS"
          # fi
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            $BUILD_TAGS \
            . --push
